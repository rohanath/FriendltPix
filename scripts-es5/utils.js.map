{"version":3,"sources":["../scripts/utils.js"],"names":["window","friendlyPix","MaterialUtils","element","jQuery","MaterialSwitch","checkDisabled","checkToggleState","drawerObfuscator","$","hasClass","click","value","parentElement","MaterialTextfield","boundUpdateClassesHandler","componentHandler","upgradeElements","get","upgradeDom","offset","resolver","Deferred","mdlLayoutElement","scroll","innerHeight","scrollTop","prop","console","log","unbind","resolve","promise","unsafe","replace"],"mappings":"AAAA;;;;;;;;;;;;;;GAeA,a,2oBAEAA,OAAOC,WAAP,CAAqBD,OAAOC,WAAP,EAAsB,EAA3C,CAEA;;GAGAA,YAAYC,aAAZ,+GAEE;;KAFF,kCAK4BC,OAL5B,CAKqC,CACjC,GAAIA,kBAAmBC,OAAvB,CAA+B,CAC7BD,QAAUA,QAAQ,CAAR,CACX,CACD,GAAIA,QAAQE,cAAZ,CAA4B,CAC1BF,QAAQE,cAAR,CAAuBC,aAAvB,GACAH,QAAQE,cAAR,CAAuBE,gBAAvB,EACD,CACF,CAED;;KAfF,iDAkBuB,CACnB,GAAMC,kBAAmBC,EAAE,yBAAF,CAAzB,CACA,GAAID,iBAAiBE,QAAjB,CAA0B,YAA1B,CAAJ,CAA6C,CAC3CF,iBAAiBG,KAAjB,EACD,CACF,CAED;;KAzBF,sDA4BwBR,OA5BxB,CA4BiC,CAC7BA,QAAQS,KAAR,CAAgB,EAAhB,CACAT,QAAQU,aAAR,CAAsBC,iBAAtB,CAAwCC,yBAAxC,EACD,CAED;;KAjCF,4DAoC2BZ,OApC3B,CAoCoC,CAChCa,iBAAiBC,eAAjB,CAAiCR,EAAE,gBAAF,CAAoBN,OAApB,EAA6Be,GAA7B,EAAjC,CACD,CAED;;KAxCF,0DA2C0Bf,OA3C1B,CA2CmC,CAC/B,GAAIA,OAAJ,CAAa,CACXa,iBAAiBC,eAAjB,CAAiCR,EAAE,gBAAF,CAAoBN,OAApB,EAA6Be,GAA7B,EAAjC,EACAF,iBAAiBC,eAAjB,CAAiCR,EAAE,cAAF,CAAkBN,OAAlB,EAA2Be,GAA3B,EAAjC,CACD,CAHD,IAGO,CACLF,iBAAiBG,UAAjB,EACD,CACF,CAED;;;;;KApDF,iDA0DiC,IAAZC,OAAY,2DAAH,CAAG,CAC7B,GAAMC,UAAW,GAAIZ,GAAEa,QAAvB,CACA,GAAMC,kBAAmBd,EAAE,aAAF,CAAzB,CACAc,iBAAiBC,MAAjB,CAAwB,UAAM,CAC5B,GAAKxB,OAAOyB,WAAP,CAAqBF,iBAAiBG,SAAjB,EAArB,CAAoDN,MAArD,EACAG,iBAAiBI,IAAjB,CAAsB,cAAtB,CADJ,CAC2C,CACzCC,QAAQC,GAAR,CAAY,qBAAZ,EACAN,iBAAiBO,MAAjB,CAAwB,QAAxB,EACAT,SAASU,OAAT,EACD,CACF,CAPD,EAQAH,QAAQC,GAAR,CAAY,8BAAZ,EACA,MAAOR,UAASW,OAAT,EACR,CAED;;KAzEF,2DA4E4B,CACxB,GAAMT,kBAAmBd,EAAE,aAAF,CAAzB,CACAc,iBAAiBO,MAAjB,CAAwB,QAAxB,CACD,CAED;;KAjFF,8CAoFoBG,MApFpB,CAoF4B,CACxB,GAAI,CAACA,MAAL,CAAa,CACX,MAAOA,OACR,CACD,MAAOA,QAAOC,OAAP,CAAe,IAAf,CAAqB,OAArB,EAA8BA,OAA9B,CAAsC,IAAtC,CAA4C,MAA5C,EAAoDA,OAApD,CAA4D,IAA5D,CAAkE,MAAlE,EACFA,OADE,CACM,IADN,CACY,QADZ,EACsBA,OADtB,CAC8B,IAD9B,CACoC,QADpC,CAER,CA1FH","file":"utils.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nwindow.friendlyPix = window.friendlyPix || {};\n\n/**\n * Set of utilities to handle Material Design Lite elements.\n */\nfriendlyPix.MaterialUtils = class {\n\n  /**\n   * Refreshes the UI state of the given Material Design Checkbox / Switch element.\n   */\n  static refreshSwitchState(element) {\n    if (element instanceof jQuery) {\n      element = element[0];\n    }\n    if (element.MaterialSwitch) {\n      element.MaterialSwitch.checkDisabled();\n      element.MaterialSwitch.checkToggleState();\n    }\n  }\n\n  /**\n   * Closes the drawer if it is open.\n   */\n  static closeDrawer() {\n    const drawerObfuscator = $('.mdl-layout__obfuscator');\n    if (drawerObfuscator.hasClass('is-visible')) {\n      drawerObfuscator.click();\n    }\n  }\n\n  /**\n   * Clears the given Material Text Field.\n   */\n  static clearTextField(element) {\n    element.value = '';\n    element.parentElement.MaterialTextfield.boundUpdateClassesHandler();\n  }\n\n  /**\n   * Upgrades the text fields in the element.\n   */\n  static upgradeTextFields(element) {\n    componentHandler.upgradeElements($('.mdl-textfield', element).get());\n  }\n\n  /**\n   * Upgrades the dropdowns in the element.\n   */\n  static upgradeDropdowns(element) {\n    if (element) {\n      componentHandler.upgradeElements($('.mdl-js-button', element).get());\n      componentHandler.upgradeElements($('.mdl-js-menu', element).get());\n    } else {\n      componentHandler.upgradeDom();\n    }\n  }\n\n  /**\n   * Returns a Promise which resolves when the user has reached the bottom of the page while\n   * scrolling.\n   * If an `offset` is specified the promise will resolve before reaching the bottom of\n   * the page by the given amount offset in pixels.\n   */\n  static onEndScroll(offset = 0) {\n    const resolver = new $.Deferred();\n    const mdlLayoutElement = $('.mdl-layout');\n    mdlLayoutElement.scroll(() => {\n      if ((window.innerHeight + mdlLayoutElement.scrollTop() + offset) >=\n          mdlLayoutElement.prop('scrollHeight')) {\n        console.log('Scroll End Reached!');\n        mdlLayoutElement.unbind('scroll');\n        resolver.resolve();\n      }\n    });\n    console.log('Now watching for Scroll End.');\n    return resolver.promise();\n  }\n\n  /**\n   * Stops scroll listeners.\n   */\n  static stopOnEndScrolls() {\n    const mdlLayoutElement = $('.mdl-layout');\n    mdlLayoutElement.unbind('scroll');\n  }\n\n  /**\n   * Escapes HTML characters from String.\n   */\n  static escapeHtml(unsafe) {\n    if (!unsafe) {\n      return unsafe;\n    }\n    return unsafe.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n  }\n};\n"]}